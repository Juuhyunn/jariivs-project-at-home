import numpy as np
from django.test import TestCase
from collections import Counter
import kss

import re

# Create your tests here.
from konlpy.tag import Okt


def testcheck():
    text = [['어제', '나머지', '학교', '숙면', '취한', '까닭', '독서', '제대로'], ['어제', '자기', '직전', '오늘', '다짐', '덕분', '오늘'],
            ['술술', '알고리즘', '문제'], ['자격증', '시험', '프로젝트'], ['개인', '공부', '알고리즘', '리액트', '리액트', '네이티'],
            ['역할', '전체', '일정', '조율', '팀원', '멘탈', '관리', '공부', '계획', '등등'], ['코딩', '공부', '한지'],
            ['처음', '시작', '무엇', '공부'], ['이제', '스스로', '공부', '계획', '심지어', '팀원', '공부', '계획'], ['점점', '발전'],
            ['다른', '활동', '확연'], ['조금', '미래', '대한', '확신'], ['가장'], ['계속', '원동력', '주기도'], ['아웃', '출구', '주기도'],
            ['개인', '학교', '공부', '노력', '친구', '선배', '존경'], ['공부', '해도'], ['학교', '공부', '친구', '선배', '대체', '얼마나'],
            ['공부', '생각'], ['때문', '이유', '생각', '공부'], ['친구', '선배', '사회', '친구', '선배'], ['공부', '가치', '최대한'],
            ['공중', '친구', '선배', '항상', '응원'], ['자신', '화이팅', '더욱', '노력'], ['코딩', '마님', '초보자', '강의', '완강'],
            ['리액트', '공부', '최고', '결정'], ['하루', '시간', '계획', '무색', '일만', '강의', '완강'], ['편이', '강의', '부록', '정도'],
            ['대충', '계산', '러닝', '타임', '시간', '정도', '누구', '공감', '그대로', '오류', '해결'], ['시간', '시간'],
            ['난이도', '기준', '정도'], ['사실', '기준', '정도', '라면', '누구', '이해'], ['바닐라', '정도', '공부', '생각', '구현'],
            ['리액트', '추천'], ['설명', '코딩', '마님', '강의', '추천'], ['컴포넌트', '개념', '컴포넌트', '단위', '그것', '배치', '화면', '느낌'],
            ['컴포넌트', '사용자', '직접', '사용', '얼마', '재사용', '효율'], ['공부', '리뷰', '형식', '강의', '프레임워크', '리뷰', '리액트', '비교'],
            ['아마', '녀석', '정해', '집중', '예정'], ['오늘', '시간', '변명', '대한', '얘기'], ['최근', '동안', '일기', '이유', '시간'],
            ['표현', '이유', '의지', '좌우', '문제', '이기', '때문'], ['아래', '루틴', '만들기', '위해', '매일'], ['다음', '정해진', '규칙', '몇번'],
            ['사실', '처음', '전부', '계획'], ['처음', '운동', '언어', '공부', '잔디', '심기', '루틴'], ['공부', '속도', '영역', '속도', '오히려', '느낌'],
            ['추가', '시작', '지금', '포화상태'], ['토이', '프로젝트', '자체', '발전', '만족도', '막상', '토이', '진행'], ['흐름', '시간', '투자', '빡빡'],
            ['루틴', '수행', '시간', '부족', '지게'], ['토이', '프로젝트', '진행', '알고리즘', '개발', '일기', '루틴'],
            ['시간', '조절', '대해', '생각', '마침', '저번', '접수', '자격증', '시험', '실기', '접수', '공부', '계획'],
            ['월일', '프로그래밍', '자격증', '우선', '순위', '공부'], ['이번', '자격증', '학생', '거의', '산업', '기사', '자격증'], ['시간'],
            ['멀티미디어', '콘텐츠', '제작', '전문가', '자격증', '멀티미디어', '콘텐츠', '기획', '설계', '제작', '능력', '유무'],
            ['시스템', '지원', '운용', '사용', '활용'], ['기본', '프로그래밍', '디자인', '작업', '수행', '능력', '유무', '판단', '자격증'],
            ['국가', '기술', '자격', '미디어', '영상', '관련', '자격증', '하나', '설명'], ['사실', '얼마나', '사용', '합격', '여부'],
            ['프로그래밍', '공부', '취미', '영상편집', '때문', '비교', '접근', '준비'], ['다음', '시험', '보고', '합격', '후기', '공부', '방법', '정도'],
            ['월일', '월일', '대충', '조금', '시간', '안일', '개발', '공부'], ['회의', '개인', '시간', '계획', '동안', '잔디'], ['이후', '다시', '의지'],
            ['오늘', '변명', '알고리즘', '풀다', '집중', '나머지'], ['커밋', '동기화', '버튼'], ['자동화', '내일', '요즘', '하루하루'], ['일기'],
            ['요즘', '아웃', '개발', '인생', '처음', '느낌', '자주'], ['개발'], ['그대로', '방향', '공부', '대해'],
            ['시간', '고민', '시간', '마침', '지난', '연휴', '동안', '여유', '생각', '정리'], ['정리', '내용'], ['막상', '버거운'], ['구매']]
    full_texts = ', '.join(', '.join(j for j in i) for i in text)
    okt = Okt()
    print(okt.pos(full_texts))
    k = list(set([i[1] for i in okt.pos(full_texts)]))
    dt = {i:[] for i in k}
    for i in okt.pos(full_texts):
        for j in dt:
            if i[1] == j:
                dt[j].append(i[0])
    print(set(dt['Noun']))

    clean_words = []
    line_remove = full_texts.replace('\n', '')

    tokenizer = re.compile(r'[^ ㄱ-힣,a-zA-Z]')
    tokenizer_text = tokenizer.sub('', line_remove)
    sentence = kss.split_sentences(tokenizer_text)
    print(sentence[0])
    for i, document in enumerate(sentence):
        clean_words = []
        for word in okt.pos(document, stem=True):
            if word[1] in ['Noun', 'Verb']:
                clean_words.append(word[0])
    print(clean_words)
    document = ' '.join(clean_words)
    count = Counter(clean_words)
    toptxt = count.most_common(10)
    available = Counter({x: count[x] for x in count if x != '하다'})  # 쓸모없는 말이 TOP 10에 있어서 지워버려씀
    print(available)
    ava = Counter({x: available[x] for x in available if len(x) > 1})
    print(ava)
    ac = available.most_common(10)
    t_data = np.array([tokenizer])
    for word in okt.pos(tokenizer_text, stem=True):
        if word[1] in ['Noun','Verb']:
            clean_words.append(word[0])
    x_data = np.array([clean_words])
    document = ' '.join(clean_words)
    print(document)

if __name__ == '__main__':
    testcheck()